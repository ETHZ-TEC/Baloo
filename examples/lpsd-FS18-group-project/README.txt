This is the skeleton app for the group project of the Low-Power Systems Design course.

A data generation function (generate_new_data()) generates data at a fixed interval.
The data rate can be configured at compile by defining the constant DATARATE, e.g. "-DDATARATE=10" for 10 packets
per second. 
/!\ Important /!\ Do not use the "DATARATE" macro in your code, instead read the value from the "datarate" variable
defined in group-project.c.

The node ID of the sink can configured at compile by defining the constant SINK_ADDRESS, e.g. "-DSINK_ADDRESS=1" for node ID 1.
/!\ Important /!\ Do not use the "SINK_ADDRESS" macro in your code, instead read the value from the "sinkaddress" variable
defined in group-project.c.

In the skeleton app, every node broadcasts one packet for every generated event. On receive, every node
forwards those packets that it has not seen yet. This forwarding concept, called flooding, propagates the packets in
the whole network. A sink node prints out the received packets.

The data generator component must not be changed and is built from following files:
  data-generator.c
  data-generator.h
Each generated packet is stored in a queue of predefined size (controlled by the PACKET_QUEUE_SIZE define in project-conf.h). 
Your application can interact with this queue using the provided API (see data-generator.h).
  
A Python scripts is provided to process the serial output generated by FlockLab:
  flocklab2metric.py: Calculates the data yield and the average power dissipation, and determines the performance metric.

The expected_data.lst file contain the list of the 200 payload data that will be generated. It is used by the Python script
to compute the data yield metric, based on the random seed defined in the Makefile (RANDOM_SEED=123)
/!\ Do not change the random seed! Or you will need to obtain the new expected payload for the script to run properly.
	Obviously, we will change the seed for the final evaluation. No point in 'learning' the payloads... 
                   
To run tests on FlockLab, do not forget to set FLOCKLAB=1 at compile.
To simulate on Cooja, do not forget to set COOJA=1 at compile.

The output of the sink node should be lpsd_packets_t, as specified in group-project.c, containing the fields 
  src_id
  seqn
  payload
To be process properly by the evaluation script, the output should be formated as follows:
  LOG_INFO("Pkt:%u,%u,%u\n", src_id, seqn, payload);
